# Python 项目配置文件 - 2025年10月标准
# 更新日期：2025年10月24日

[project]
name = "python-knowledge-base"
version = "2025.10.24"
description = "Python 知识库 - 2025年最新技术栈与最佳实践"
requires-python = ">=3.12"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Python Knowledge Base Team"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    # 核心工具链
    "ruff>=0.6.0",
    "mypy>=1.11.0",
    "pytest>=8.3.0",
    "pytest-cov>=5.0.0",
    "pre-commit>=3.8.0",
]

[project.optional-dependencies]
# Web开发依赖
web = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.30.0",
    "pydantic>=2.9.0",
    "sqlalchemy>=2.0.0",
    "httpx>=0.27.0",
]

# 数据科学依赖
data = [
    "polars>=1.9.0",
    "pandas>=2.2.0",  # 等待3.0稳定版
    "numpy>=2.1.0",
    "matplotlib>=3.9.0",
    "seaborn>=0.13.0",
    "scikit-learn>=1.5.0",
]

# AI/ML依赖
ai = [
    "torch>=2.4.0",
    "transformers>=4.45.0",
    "langchain>=0.3.0",
    "openai>=1.50.0",
]

# 开发工具
dev = [
    "pytest>=8.3.0",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-mock>=3.14.0",
    "ruff>=0.6.0",
    "mypy>=1.11.0",
    "pre-commit>=3.8.0",
    "ipython>=8.27.0",
    "ipdb>=0.13.0",
]

# 文档生成
docs = [
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.26.0",
]

# 所有依赖
all = [
    "python-knowledge-base[web,data,ai,dev,docs]",
]

[project.urls]
Homepage = "https://github.com/yourusername/python-knowledge-base"
Documentation = "https://python-knowledge-base.readthedocs.io"
Repository = "https://github.com/yourusername/python-knowledge-base"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# =============================================================================
# Ruff 配置 (替代 black, isort, flake8)
# =============================================================================
[tool.ruff]
line-length = 100
target-version = "py312"  # 更新到 Python 3.12
indent-width = 4

# 排除目录
exclude = [
    ".git",
    ".venv",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
]

[tool.ruff.lint]
# 启用的规则集（2025标准）
select = [
    "E",     # pycodestyle错误
    "F",     # Pyflakes
    "UP",    # pyupgrade (自动升级语法)
    "W",     # pycodestyle警告
    "B",     # flake8-bugbear
    "SIM",   # flake8-simplify
    "I",     # isort (导入排序)
    "N",     # pep8-naming
    "ASYNC", # flake8-async
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "T10",   # flake8-debugger
    "PIE",   # flake8-pie
    "T20",   # flake8-print
    "RET",   # flake8-return
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    "ERA",   # eradicate (删除注释代码)
    "PL",    # pylint
    "TRY",   # tryceratops
    "FLY",   # flynt (字符串格式化)
    "PERF",  # Perflint (性能)
    "RUF",   # Ruff特定规则
]

# 忽略的规则
ignore = [
    "E501",   # 行太长（已由line-length控制）
    "TRY003", # 避免在异常中使用长消息
    "PLR0913", # 函数参数过多
    "PLR2004", # 魔法数字
]

# 每个文件的忽略规则
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # 未使用的导入
"tests/**/*.py" = ["PLR2004", "S101", "ARG"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# =============================================================================
# Mypy 配置 (类型检查)
# =============================================================================
[tool.mypy]
python_version = "3.12"  # 更新到 Python 3.12
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
show_error_codes = true
show_column_numbers = true
pretty = true

# 第三方库类型存根
[[tool.mypy.overrides]]
module = [
    "numpy.*",
    "pandas.*",
    "matplotlib.*",
    "sklearn.*",
]
ignore_missing_imports = true

# =============================================================================
# Pytest 配置
# =============================================================================
[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",                    # 显示所有测试结果
    "-q",                     # 简洁输出
    "--strict-markers",       # 严格标记
    "--strict-config",        # 严格配置
    "--cov",                  # 代码覆盖率
    "--cov-report=term-missing", # 显示未覆盖代码
    "--cov-report=html",      # HTML覆盖率报告
    "--cov-report=xml",       # XML覆盖率报告（CI用）
    "--cov-branch",           # 分支覆盖
    "--asyncio-mode=auto",    # 自动异步模式
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# 测试标记
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async tests",
]

# =============================================================================
# Coverage 配置
# =============================================================================
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# =============================================================================
# uv 配置（2025推荐包管理器）
# =============================================================================
[tool.uv]
# 使用uv管理依赖
managed = true
# 开发依赖
dev-dependencies = [
    "pytest>=8.3.0",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.6.0",
    "mypy>=1.11.0",
]

# =============================================================================
# Black 配置（如果不使用ruff format）
# =============================================================================
[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'

# =============================================================================
# isort 配置（如果不使用ruff）
# =============================================================================
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true


