# 2025年Python现代项目标准配置
# 创建日期：2025年10月24日
# 特点：Python 3.12+, uv包管理, ruff代码质量, mypy类型检查

[project]
name = "my-modern-project"
version = "0.1.0"
description = "A modern Python project following 2025 best practices"
requires-python = ">=3.12"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["python", "modern", "2025"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]

dependencies = [
    # 根据项目需求添加
]

[project.optional-dependencies]
# Web开发
web = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.30.0",
    "pydantic>=2.9.0",
]

# 数据处理
data = [
    "polars>=1.9.0",
    "pandas>=2.2.0",
]

# 开发工具
dev = [
    "pytest>=8.3.0",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.6.0",
    "mypy>=1.11.0",
    "pre-commit>=3.8.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/my-modern-project"
Repository = "https://github.com/yourusername/my-modern-project"
Issues = "https://github.com/yourusername/my-modern-project/issues"

[project.scripts]
my-project = "my_modern_project.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# =============================================================================
# Ruff - 代码质量工具（替代black/isort/flake8）
# =============================================================================
[tool.ruff]
line-length = 100
target-version = "py312"
indent-width = 4

exclude = [
    ".git", ".venv", "__pycache__",
    "build", "dist", "*.egg-info",
]

[tool.ruff.lint]
select = [
    "E", "F", "UP", "W", "B", "SIM", "I", "N",
    "ASYNC", "C4", "DTZ", "PIE", "RET", "ARG",
    "PTH", "ERA", "PL", "PERF", "RUF",
]

ignore = ["E501", "TRY003", "PLR0913", "PLR2004"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["PLR2004", "S101", "ARG"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

# =============================================================================
# Mypy - 静态类型检查
# =============================================================================
[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

# =============================================================================
# Pytest - 测试框架
# =============================================================================
[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--asyncio-mode=auto",
]

markers = [
    "slow: slow running tests",
    "integration: integration tests",
    "unit: unit tests",
]

# =============================================================================
# Coverage - 代码覆盖率
# =============================================================================
[tool.coverage.run]
source = ["src"]
branch = true
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
precision = 2
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

# =============================================================================
# uv - 包管理器（2025推荐）
# =============================================================================
[tool.uv]
managed = true
dev-dependencies = [
    "pytest>=8.3.0",
    "pytest-cov>=5.0.0",
    "ruff>=0.6.0",
    "mypy>=1.11.0",
]

